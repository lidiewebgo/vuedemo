{"remainingRequest":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/isaac-chip/Desktop/vue-admin-template/src/components/Tags/index.vue?vue&type=style&index=0&id=11dff78c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/isaac-chip/Desktop/vue-admin-template/src/components/Tags/index.vue","mtime":1598883558793},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac-chip/Desktop/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vIHRhZ+e7hOS7tuagt+W8jwoudGFncyB7CiAgd2lkdGg6IDEwMCU7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOwogIHBhZGRpbmc6IDEycHggMTBweDsKICAmLW91dC1ib3ggewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogIH0KICAmLWJveCB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB0cmFuc2l0aW9uOiAwLjNzOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Tags","sourcesContent":["<template>\n  <div\n    class=\"tags\"\n    @contextmenu.prevent\n    ref=\"tags\"\n    :style=\"{'padding': arrowVisible ? '12px 0' : '12px 10px'}\"\n  >\n    <div class=\"tags-out-box\" ref=\"outBox\">\n      <div class=\"svg arrow\" v-if=\"arrowVisible\" @click=\"handleClickToLeft\">\n        <svg-icon icon-class=\"arrow-left\" />\n      </div>\n      <div\n        class=\"tags-box\"\n        ref=\"box\"\n        :style=\"{'padding-left': arrowVisible ? '30px' : '0', left: `${left}px`}\"\n      >\n        <el-tag\n          ref=\"tag\"\n          size=\"small\"\n          v-for=\"(tag, i) in tags\"\n          :data-index=\"i\"\n          :data-id=\"tag.menuId\"\n          :key=\"tag.name\"\n          :closable=\"tag.name !== 'home'\"\n          :effect=\"$route.name === tag.name ? 'dark' : 'plain'\"\n          @contextmenu.native.prevent=\"handleClickContextMenu($event)\"\n          @click=\"handleTagClick($event, tag)\"\n          @close=\"handleTagClose(tag, i)\"\n        >{{tag.label}}</el-tag>\n      </div>\n      <div class=\"svg arrow arrow-right\" v-if=\"arrowVisible\" @click=\"handleClickToRight\">\n        <svg-icon icon-class=\"arrow-right\" />\n      </div>\n    </div>\n\n    <ul class=\"right-menu\" :style=\"{left: menuLeft, top: menuTop}\" v-show=\"contextMenuVisible\">\n      <a href=\"javascript:;\" @click=\"refresh\">刷新</a>\n      <a href=\"javascript:;\" @click=\"closeTag\" v-if=\"tagIndex !== 0\">关闭</a>\n      <a href=\"javascript:;\" @click=\"closeOtherTag\" v-if=\"tagIndex !== 0\">关闭其它</a>\n      <a href=\"javascript:;\" @click=\"closeAllTag\">关闭所有</a>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport elementResizeDetectorMaker from \"element-resize-detector\";\nexport default {\n  data() {\n    return {\n      contextMenuVisible: false, // 是否显示菜单\n      menuLeft: \"\", // 右键菜单距离浏览器左边的距离\n      menuTop: \"\", // 右键菜单距离浏览器上边的距离\n      tagIndex: 0, // 当前点击的tag的索引\n      tag: {}, // 当前右键点击的tag对象\n      arrowVisible: false, // 是否显示箭头\n      tagsBoxWidth: 0, // ref 为 outBox 的长度\n      tagsWidth: 0, // ref 为 tags 的长度\n      left: 0, // ref 为 box 节点相对于左边的距离，用于箭头点击\n    };\n  },\n  mounted() {\n    window.addEventListener(\"click\", (e) => {\n      const target = e.target;\n      if (target.nodeName !== \"SPAN\") {\n        // 只要点击的不是el-tag就可以关闭，因为el-tag是用span标签实现的\n        this.contextMenuVisible = false;\n      }\n    });\n\n    this.len = this.tags.length;\n    this.tagsWidth = this.$refs.tags.offsetWidth;\n    const erd = elementResizeDetectorMaker();\n    erd.listenTo(this.$refs.outBox, (ele) => {\n      this.$nextTick(() => {\n        this.tagsBoxWidth = ele.offsetWidth;\n        if (this.tagsBoxWidth >= this.tagsWidth) {\n          this.arrowVisible = true;\n        } else {\n          this.arrowVisible = false;\n        }\n      });\n    });\n  },\n  computed: {\n    ...mapState({\n      tags: (state) => state.tags.tagList,\n    }),\n  },\n\n  methods: {\n    refresh() {\n      this.$router.go(0);\n    },\n    handleClickContextMenu(event) {\n      const e = event || window.event;\n      const target = e.target;\n      this.menuLeft = e.layerX + 20 + \"px\"; // 菜单出现的位置距离左侧的距离\n      this.menuTop = e.layerY + 20 + \"px\"; // 菜单出现的位置距离顶部的距离\n      this.tagIndex = Number(target.getAttribute(\"data-index\")); // 获取当前右击菜单的索引。从0开始\n      this.contextMenuVisible = true; // 显示菜单\n\n      this.tag = this.tags[this.tagIndex]; // 当前右击的菜单信息\n    },\n    /**\n     * 参数说明\n     * tag 当前右击的标签所存的对象\n     * index 当前右击标签的索引\n     * delCount 删除个数，默认删除1个\n     * isCloseOther 是否删除其他 默认不是\n     */\n    handleTagClose(tag, index, delCount = 1, isCloseOther = false) {\n      const length = this.tags.length - 1;\n      const payload = {\n        index,\n        delCount,\n        isCloseOther,\n      };\n\n      // 执行存标签\n      this.$store.dispatch(\"menuTag/closeTag\", payload);\n\n      // 点击关闭其他，并且不是当前所在的页面\n      if (tag.name !== this.$route.name && isCloseOther) {\n        this.$router.push({ name: tag.name });\n        return;\n      }\n\n      // 右击的标签正是当前打开的页面并且不是最后一个\n      if (tag.name === this.$route.name && index < this.tags.length - 1) {\n        this.$router.push({ name: this.tags[index + 1].name });\n      }\n\n      // 关闭的标签是最右边的话，往左边跳转一个\n      if (index === length && !isCloseOther) {\n        this.$router.push({ name: this.tags[index - 1].name });\n        return;\n      }\n      if (index <= length && !isCloseOther) {\n        // 否则往右边跳转\n        if (index !== 1) this.$router.push({ name: this.tags[index].name });\n      }\n    },\n    closeTag() {\n      if (this.tags.length === 1) return;\n      this.handleTagClose(this.tag, this.tagIndex);\n    },\n    closeOtherTag() {\n      if (this.tags.length === 2) return;\n      if (this.tagIndex === 1) {\n        this.handleTagClose(\n          this.tag,\n          this.tagIndex + 1,\n          this.tags.length,\n          true\n        );\n        return;\n      }\n\n      this.handleTagClose(this.tag, 1, this.tagIndex - 1, true);\n      this.handleTagClose(this.tag, this.tagIndex, this.tags.length, true);\n    },\n    closeAllTag() {\n      if (this.tags.length === 1) return;\n      this.handleTagClose(this.tag, 1, this.tags.length);\n      this.$router.push({ name: \"home\" });\n    },\n    handleClickToLeft() {\n      this.left = 0;\n    },\n    handleClickToLeft() {\n      this.left = this.tagsWidth - this.tagsBoxWidth - 30;\n    },\n    handleTagClick(e, tag){\n        console.group(\"---\")\n        console.log(e)\n        console.log(tag.path)\n        this.$router.push({path:`${tag.path}`})\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// tag组件样式\n.tags {\n  width: 100%;\n  white-space: nowrap;\n  background-color: blue;\n  padding: 12px 10px;\n  &-out-box {\n    display: inline-block;\n    position: relative;\n  }\n  &-box {\n    position: relative;\n    transition: 0.3s;\n  }\n}\n</style>"]}]}